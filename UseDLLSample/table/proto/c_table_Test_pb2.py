# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2



_TESTA = descriptor.Descriptor(
  name='TestA',
  full_name='Table.TestA',
  filename='c_table_Test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='Table.TestA.id', index=0,
      number=1, type=17, cpp_type=1, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='enum_test', full_name='Table.TestA.enum_test', index=1,
      number=2, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ulist', full_name='Table.TestA.ulist', index=2,
      number=3, type=13, cpp_type=3, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='struct_test', full_name='Table.TestA.struct_test', index=3,
      number=4, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_TESTA_ARRAY = descriptor.Descriptor(
  name='TestA_ARRAY',
  full_name='Table.TestA_ARRAY',
  filename='c_table_Test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='rows', full_name='Table.TestA_ARRAY.rows', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_TESTB = descriptor.Descriptor(
  name='TestB',
  full_name='Table.TestB',
  filename='c_table_Test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id1', full_name='Table.TestB.id1', index=0,
      number=1, type=17, cpp_type=1, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='id2', full_name='Table.TestB.id2', index=1,
      number=2, type=17, cpp_type=1, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='enum_test', full_name='Table.TestB.enum_test', index=2,
      number=3, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ulist', full_name='Table.TestB.ulist', index=3,
      number=4, type=13, cpp_type=3, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='struct_test', full_name='Table.TestB.struct_test', index=4,
      number=5, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_TESTB_ARRAY = descriptor.Descriptor(
  name='TestB_ARRAY',
  full_name='Table.TestB_ARRAY',
  filename='c_table_Test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='rows', full_name='Table.TestB_ARRAY.rows', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)

import common_test_pb2

_TESTA.fields_by_name['enum_test'].enum_type = common_test_pb2._ENUMTEST
_TESTA.fields_by_name['struct_test'].message_type = common_test_pb2._STRUCTTEST
_TESTA_ARRAY.fields_by_name['rows'].message_type = _TESTA
_TESTB.fields_by_name['enum_test'].enum_type = common_test_pb2._ENUMTEST
_TESTB.fields_by_name['struct_test'].message_type = common_test_pb2._STRUCTTEST
_TESTB_ARRAY.fields_by_name['rows'].message_type = _TESTB

class TestA(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTA

class TestA_ARRAY(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTA_ARRAY

class TestB(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTB

class TestB_ARRAY(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTB_ARRAY

