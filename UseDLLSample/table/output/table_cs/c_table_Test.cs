//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: c_table_Test.proto
// Note: requires additional types generated from: common_test.proto
namespace Table
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestA")]
 public partial class TestA : global::ProtoBuf.IExtensible
  {
    public TestA() {}
    

    private int? _id;
    /// <summary>
    /// ID
    /// </summary>
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int id
    {
      get { return _id?? default(int); }
      set { _id = value; }
    }
    //Here has been deleted XmlIgnore
    [global::System.ComponentModel.Browsable(false)]
    public bool idSpecified
    {
      get { return _id != null; }
      set { if (value == (_id== null)) _id = value ? id : (int?)null; }
    }
    private bool ShouldSerializeid() { return idSpecified; }
    private void Resetid() { idSpecified = false; }
    

    private Common.EnumTest? _enum_test;
    /// <summary>
    /// 枚举
    /// </summary>
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"enum_test", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Common.EnumTest enum_test
    {
      get { return _enum_test?? Common.EnumTest.ENUM_TEST_INVALID; }
      set { _enum_test = value; }
    }
    //Here has been deleted XmlIgnore
    [global::System.ComponentModel.Browsable(false)]
    public bool enum_testSpecified
    {
      get { return _enum_test != null; }
      set { if (value == (_enum_test== null)) _enum_test = value ? enum_test : (Common.EnumTest?)null; }
    }
    private bool ShouldSerializeenum_test() { return enum_testSpecified; }
    private void Resetenum_test() { enum_testSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<uint> _ulist = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(3, Name=@"ulist", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> ulist
    {
      get { return _ulist; }
    }
  

    private Common.StructTest _struct_test = null;
    /// <summary>
    /// 结构
    /// </summary>
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"struct_test", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Common.StructTest struct_test
    {
      get { return _struct_test; }
      set { _struct_test = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
 }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestA_ARRAY")]
  public partial class TestA_ARRAY : global::ProtoBuf.IExtensible
  {
    public TestA_ARRAY() {}
    
    private readonly global::System.Collections.Generic.List<Table.TestA> _rows = new global::System.Collections.Generic.List<Table.TestA>();
    [global::ProtoBuf.ProtoMember(1, Name=@"rows", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Table.TestA> rows
    {
      get { return _rows; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestB")]
 public partial class TestB : global::ProtoBuf.IExtensible
  {
    public TestB() {}
    

    private int? _id1;
    /// <summary>
    /// ID1
    /// </summary>
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"id1", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int id1
    {
      get { return _id1?? default(int); }
      set { _id1 = value; }
    }
    //Here has been deleted XmlIgnore
    [global::System.ComponentModel.Browsable(false)]
    public bool id1Specified
    {
      get { return _id1 != null; }
      set { if (value == (_id1== null)) _id1 = value ? id1 : (int?)null; }
    }
    private bool ShouldSerializeid1() { return id1Specified; }
    private void Resetid1() { id1Specified = false; }
    

    private int? _id2;
    /// <summary>
    /// ID2
    /// </summary>
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"id2", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int id2
    {
      get { return _id2?? default(int); }
      set { _id2 = value; }
    }
    //Here has been deleted XmlIgnore
    [global::System.ComponentModel.Browsable(false)]
    public bool id2Specified
    {
      get { return _id2 != null; }
      set { if (value == (_id2== null)) _id2 = value ? id2 : (int?)null; }
    }
    private bool ShouldSerializeid2() { return id2Specified; }
    private void Resetid2() { id2Specified = false; }
    

    private Common.EnumTest? _enum_test;
    /// <summary>
    /// 枚举
    /// </summary>
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"enum_test", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Common.EnumTest enum_test
    {
      get { return _enum_test?? Common.EnumTest.ENUM_TEST_INVALID; }
      set { _enum_test = value; }
    }
    //Here has been deleted XmlIgnore
    [global::System.ComponentModel.Browsable(false)]
    public bool enum_testSpecified
    {
      get { return _enum_test != null; }
      set { if (value == (_enum_test== null)) _enum_test = value ? enum_test : (Common.EnumTest?)null; }
    }
    private bool ShouldSerializeenum_test() { return enum_testSpecified; }
    private void Resetenum_test() { enum_testSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<uint> _ulist = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(4, Name=@"ulist", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> ulist
    {
      get { return _ulist; }
    }
  

    private Common.StructTest _struct_test = null;
    /// <summary>
    /// 结构
    /// </summary>
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"struct_test", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Common.StructTest struct_test
    {
      get { return _struct_test; }
      set { _struct_test = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
 }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TestB_ARRAY")]
  public partial class TestB_ARRAY : global::ProtoBuf.IExtensible
  {
    public TestB_ARRAY() {}
    
    private readonly global::System.Collections.Generic.List<Table.TestB> _rows = new global::System.Collections.Generic.List<Table.TestB>();
    [global::ProtoBuf.ProtoMember(1, Name=@"rows", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Table.TestB> rows
    {
      get { return _rows; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}